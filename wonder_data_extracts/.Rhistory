mutate(county=gsub(" parish", "", tolower(county))) %>% # because louisiana is weird
mutate(county=gsub(".", "", county)) %>%  # in the ggplot map data, they don't have periods
select(fips, POPESTIMATE2012, state, county) %>%
filter(substr(fips,3,5) != '000')  #this was super exagerating the population!
natality.2<- county.pop %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
mutate(fips_state = substr(fips,1,2)) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(county_display = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012)) %>%
group_by(county_display) %>%
mutate(population_display = sum(population)) %>%
select(fips,
county_display,
cesarean_rate,
births,
population,
population_display,
state,
county)
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,state,county)
# join the natality data with the county data.
map.df      <- map.county[natality.3]
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black")+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(county_display,
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
county.pop <- read.csv("co-est2016-alldata.csv", colClasses = "character") %>%
mutate(fips = paste0(STATE, COUNTY),
state = toTitleCase(STNAME),
county = gsub(" county", "", tolower(CTYNAME)))%>%
mutate(county=gsub(" parish", "", tolower(county))) %>% # because louisiana is weird
mutate(county=gsub("\.", "", county)) %>%  # in the ggplot map data, they don't have periods
select(fips, POPESTIMATE2012, state, county) %>%
filter(substr(fips,3,5) != '000')  #this was super exagerating the population!
county.pop <- read.csv("co-est2016-alldata.csv", colClasses = "character") %>%
mutate(fips = paste0(STATE, COUNTY),
state = toTitleCase(STNAME),
county = gsub(" county", "", tolower(CTYNAME)))%>%
mutate(county=gsub(" parish", "", tolower(county))) %>% # because louisiana is weird
mutate(county=gsub("[.]", "", county)) %>%  # in the ggplot map data, they don't have periods
select(fips, POPESTIMATE2012, state, county) %>%
filter(substr(fips,3,5) != '000')  #this was super exagerating the population!
View(county.pop)
natality.2<- county.pop %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
mutate(fips_state = substr(fips,1,2)) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(county_display = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012)) %>%
group_by(county_display) %>%
mutate(population_display = sum(population)) %>%
select(fips,
county_display,
cesarean_rate,
births,
population,
population_display,
state,
county)
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,state,county)
# join the natality data with the county data.
map.df      <- map.county[natality.3]
View(map.df)
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black")+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(county_display,
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
View(state_map)
View(natality.3)
View(map.df)
View(counties_3)
View(map.df)
View(map.county)
# use the TIGER dataset from the census to draw the counties
# http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_5m.zip
setwd("C:/Users/smits/Documents/GitHub/delivery_method/wonder_data_extracts")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
map.df      <- county.data[natality.3]
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black")+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(county_display,
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
names(map.df)
View(county.data)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
View(map.df)
# join the natality data with the county data.
county.data <- county.data[natality.3]
View(county.data)
# merge the mapping information with natality/county data
map.df[county.data]
# merge the mapping information with natality/county data
map.df<- map.df[county.data]
View(map.df)
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]
View(map.df)
View(county.data)
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
View(county.data)
View(natality.3)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
View(county.data)
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
names(map.df)
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black")+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(county_display,
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(county_display,
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
str(map.df$population)
str(map.df$cesarean_rate)
unique(map.df$county_display)
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(I(county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
View(map.df)
gsub("'", "", "gorege's")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(gsub("'", "", county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
View(map.df)
View(county.pop)
View(county.data)
View(US.counties)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
View(county.data)
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
## setup state mapping data
state_map <- map_data("state") %>%
mutate(region = toTitleCase(region))
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(gsub("'", "", county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
View(county.data)
names(county.data)
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
View(US.counties)
View(county.data)
# change Shannon county to Okglala lakota...just change the county part of the fips code
county.data <- county.data %>%
mutate(COUNTY = ifelse(COUNTY == 113, 102, COUNTY))
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
## setup state mapping data
state_map <- map_data("state") %>%
mutate(region = toTitleCase(region))
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(gsub("'", "", county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
str(county.data$COUNTY)
# change Shannon county to Okglala lakota...just change the county part of the fips code
county.data <- county.data %>%
mutate(COUNTY = ifelse(COUNTY == "113", "102", COUNTY))
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
## setup state mapping data
state_map <- map_data("state") %>%
mutate(region = toTitleCase(region))
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(gsub("'", "", county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
# change Shannon county to Okglala lakota...just change the county part of the fips code
county.data <- county.data %>%
mutate(COUNTY = ifelse(COUNTY == "113" &
STATE == "46", "102", COUNTY))
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
## setup state mapping data
state_map <- map_data("state") %>%
mutate(region = toTitleCase(region))
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(gsub("'", "", county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
# change Shannon county to Okglala lakota...just change the county part of the fips code
county.data <- county.data %>%
mutate(COUNTY = ifelse(COUNTY == "113" &
STATE == "46", "102", COUNTY))
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
View(natality.3)
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
map.df <- data.table(fortify(US.counties))
names(map.df)
heaD(map.df)
head(map.df)
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
# change Shannon county to Okglala lakota...just change the county part of the fips code
# county.data <- county.data %>%
#   mutate(COUNTY = ifelse(COUNTY == "113" &
#                            STATE == "46", "102", COUNTY))
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
## setup state mapping data
state_map <- map_data("state") %>%
mutate(region = toTitleCase(region))
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(gsub("'", "", county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
str(natality.2$fips)
natality.2<- county.pop %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
mutate(fips_state = substr(fips,1,2)) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(county_display = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012)) %>%
group_by(county_display) %>%
mutate(population_display = sum(population),
fips = ifelse(fips == "46102", "46113", fips)) %>%
select(fips,                     #take only the variables I need going forward
county_display,
cesarean_rate,
births,
population,
population_display,
state,
county)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
# change Shannon county to Okglala lakota...just change the county part of the fips code
# county.data <- county.data %>%
#   mutate(COUNTY = ifelse(COUNTY == "113" &
#                            STATE == "46", "102", COUNTY))
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
# troubleshooting
selected_states<- c("Utah", "Colorado", "Idaho")
# [map.df$region %in% selected_states,]
# [state_map$region %in% selected_states,]
p<- ggplot(map.df, aes(x=long, y=lat, group = group)) +
geom_polygon(colour = "grey" , aes(fill = cesarean_rate)) +
coord_map("polyconic")+
geom_path(data = state_map, colour="black", size = .5)+
theme_void() +
geom_polygon_interactive(aes(tooltip = paste0(gsub("'", "", county_display),
"<br>Population: ", format(population,big.mark=","),
"<br>C-section Rate: ", cesarean_rate, "%")
, fill = cesarean_rate))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
ggiraph(code = print(p)) #takes a super long time to render...
source('~/GitHub/delivery_method/delivery_method_app/app.R')
source('~/GitHub/delivery_method/delivery_method_app/app.R')
head(map.df)
source('~/GitHub/delivery_method/delivery_method_app/app.R')
names(map.df)
source('~/GitHub/delivery_method/delivery_method_app/app.R')
source('~/GitHub/delivery_method/delivery_method_app/app.R')
