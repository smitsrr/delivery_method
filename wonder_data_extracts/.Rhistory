wesanderson)
#google analytics:
authorize()
profiles<-list_profiles()
#FYi, this is a handy tool: https://ga-dev-tools.appspot.com/query-explorer/
end_dt <- ymd(Sys.Date()) - days(1)
start_dt <- end_dt - days(30)
today <- ymd(Sys.Date())
first_dt <- mdy("12/2/2012")
##Set colors for graphing
rallyme_palette <- append(wes_palette("Zissou"), wes_palette("GrandBudapest"))
#-----------------------------
#  LOAD DATA
#-----------------------------
setwd("C:/Users/smits/Documents/RallyMe/Dashboard/Main Dashboard and data")
## Had to input Bill's file path.
rallies<- read.csv("data/rallies-report.csv") #presumably has more dates than active
old_payments <- read.csv("data/boosts-report_w mtn.csv")
new_payments <- read.csv("data/boosts-report.csv")
finance <- read.csv("data/finance_data.csv") ##Something happened with this .csv.
active<-read.csv("data/active_rallies.csv")
getwd()
knitr::opts_chunk$set(echo = TRUE)
sketch <- htmltools::withTags(table(
tableHeader(dt_test),
tableFooter(sapply(dt_test, function(x) if(is.numeric(x)) sum(x)))
))
library(htmltools)
sketch <- htmltools::withTags(table(
tableHeader(dt_test),
tableFooter(sapply(dt_test, function(x) if(is.numeric(x)) sum(x)))
))
library(DT)
sketch <- htmltools::withTags(table(
tableHeader(dt_test),
tableFooter(sapply(dt_test, function(x) if(is.numeric(x)) sum(x)))
))
dt_test <- structure(list(`pathologie principale` = c("Effet toxique des métaux",
"Autres résultats anormaux des examens chimiques du sang", "Néphrite tubulo-interstitielle chronique",
"Atteintes tubulo-interstitielles et tubulaires dues à des médicaments et des métaux lourds",
"Autres maladies     pulmonaires obstructives chroniques", "Autres résultats anormaux de l'examen des urines"
),     Fort = c(12L, 4L, 3L, 2L, 2L, 2L), Moyen = c(2L, 0L, 0L, 0L, 1L, 1L), Faible = c(4L, 0L, 0L, 0L, 4L, 0L)),
.Names = c("pathologie principale",                  "Fort", "Moyen", "Faible"), class = c("data.table", "data.frame"
), row.names = c(NA, -6L))
head(dt_test)
sketch <- htmltools::withTags(table(
tableHeader(dt_test),
tableFooter(sapply(dt_test, function(x) if(is.numeric(x)) sum(x)))
))
datatable(dt_test,
container = sketch,
rownames = F
)
tableHTML(mtcars)
library(tableHTML)
install.packages(tableHTML)
install.packages('tableHTML')
library(tableHTML)
tableHTML(mtcars)
tableHTML(mtcars, second_headers = list(c(3, 4, 5), c('col1', 'col2', 'col3')))
tableHTML(mtcars,
widths = c(rep(50, 6), rep(100, 6)),
second_headers = list(c(3, 4, 5), c('col1', 'col2', 'col3')))
tableHTML(mtcars, caption = 'This is a caption', footer = 'This is a footer')
tableHTML(mtcars,
row_groups = list(c(10, 10, 12), c('Group 1', 'Group 2', 'Group 3')),
widths = c(200, rep(50, 5), rep(100, 6)),
rownames = FALSE)
tableHTML(mtcars,
rownames = FALSE,
widths = c(140, rep(50, 11)),
row_groups = list(c(10, 10, 12), c('Group 1', 'Group 2', 'Group 3')),
second_headers = list(c(3, 4, 5), c('col1', 'col2', 'col3')))
tableHTML(mtcars,
rownames = FALSE,
widths = c(140, rep(50, 11)),
row_groups = list(c(10, 10, 12), c('Group 1', 'Group 2', 'Group 3')),
second_headers = list(c(3, 4), c('col1', 'col2')),
theme = 'scientific')
tableHTML(mtcars, theme = 'rshiny-blue', widths = c(140, rep(50, 11)))
tableHTML(mtcars, collapse = 'separate_shiny', spacing = '5px')
??tfooter
kable(mtcars)
library(kable)
install.packages('kable')
version()
r.version()
R.Version()
library("ggplot2")
data("diamonds")
p1 = ggplot(subset(diamonds, carat >= 2.2),
aes(x = table, y = price, colour = cut)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "loess", alpha = 0.1, size = 1, span = 1) +
theme_bw()
p2 = ggplot(subset(diamonds, carat > 2.2 & depth > 55 & depth < 70),
aes(x = depth, fill = cut)) +
geom_histogram(colour = "black", binwidth = 1, position = "dodge") +
theme_bw()
p1 + scale_color_d3()
p2 + scale_fill_d3()
library("ggsci")
p1 + scale_color_d3()
vignette("ggsci")
library(RCurl)
#load most recent rallies report.
setwd("C:/Users/smits/Documents/RallyMe/Dashboard/rallymeVis")
#load most recent rallies report.
setwd("C:/Users/smits/Documents/RallyMe/Dashboard/rallymeVis")
getwd()
#load most recent rallies report.
setwd("C:/Users/smits/Documents/RallyMe/Dashboard/rallymeVis")
#load most recent rallies report.
setwd("C:/Users/smits/Documents/RallyMe/Dashboard/rallymeVis"
getwd()
shiny::runApp(appDir = system.file("shiny/crimes", package = "ggiraph"), display.mode = "showcase")
shiny::runApp(appDir = system.file("shiny/cars", package = "ggiraph"), display.mode = "showcase")
shiny::runApp(appDir = system.file("shiny/iris", package = "ggiraph"), display.mode = "showcase")
shiny::runApp(appDir = system.file("shiny/iris", package = "ggiraph"), display.mode = "showcase")
shiny::runApp(appDir = system.file("shiny/crimes", package = "ggiraph"), display.mode = "showcase")
library(shiny)
library(plyr)
library(dplyr)
library(ggplot2)
library(rgdal)    # for readOGR(...)
library(maptools)
library(data.table)
library(mapproj)
library(RColorBrewer) # for brewer.pal(...)
library(plotly)
library(stringr)      # for str_detect(...)
library(ggthemes)
library(shinyWidgets)
library(ggiraph)      # for Geom_polygon_interactive(...)
library(tools)        # for toTitleCase(...)
setwd("C:/Users/smits/Documents/GitHub/delivery_method")
#import some data
# Note, you have to delete the comments at the end of the text files.
# due to supression, the totals likely won't be able to be calculated when
# you include segments.
# age and race - use this for the analysis of race and age.
natality_race_age<- read.delim("wonder_data_extracts/Natality_12_15_race_age_v2.txt",
header = TRUE, colClasses = "character")
race_age<- natality_race_age %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, Race.Code, Age.of.Mother.9.Code) %>%
mutate(cesarean_rate = Births/sum(Births),
Race = factor(Race, levels=c("American Indian or Alaska Native",
"Asian or Pacific Islander",
"White",
"Black or African American"),
ordered = TRUE)) %>%
filter(Delivery.Method == "Cesarean")
# county totals, all births
natality<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_all_births_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate_all = round(Births/sum(Births),4)*100,
births_all = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
# population totals for counties
# https://www.census.gov/data/datasets/2016/demo/popest/counties-total.html#ds
setwd("C:/Users/smits/Documents/GitHub/delivery_method/")
county.pop <- read.csv("co-est2016-alldata.csv", colClasses = "character") %>%
mutate(fips = paste0(STATE, COUNTY),
state = toTitleCase(STNAME),
county = gsub(" county", "", tolower(CTYNAME)))%>%
mutate(county=gsub(" parish", "", tolower(county))) %>% # because louisiana is weird
mutate(county=gsub("[.]", "", county)) %>%  # in the ggplot map data, they don't have periods
select(fips, POPESTIMATE2012, state, county) %>%
filter(substr(fips,3,5) != '000')  #this was super exagerating the population!
#join in unidentified counties so taht we can join by state
unidentified<- filter(natality, str_detect(County, "Unidentified")) %>%
mutate(state_code = substr(County.Code, 1,2))
natality.2<- county.pop %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
mutate(fips_state = substr(fips,1,2)) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(county_display = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012)) %>%
group_by(county_display) %>%
mutate(population_display = sum(population),
fips = ifelse(fips == "46102", "46113", fips)) %>%
select(fips,                     #take only the variables I need going forward
county_display,
cesarean_rate,
births,
population,
population_display,
state,
county)
# check that we have cesarean rates for all counties with >100,000 2013 pop
#unidentified_check<- filter(counties_3, population<100000)
# check population sums
#unidentified_check<- filter(counties_3, state == 'Alabama')
# use the TIGER dataset from the census to draw the state outlines
# http://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_state_5m.zip
US.states <- readOGR(dsn=".",layer="cb_2016_us_050_00_5m")
# use the TIGER dataset from the census to draw the counties
# http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_5m.zip
setwd("C:/Users/smits/Documents/GitHub/delivery_method/wonder_data_extracts")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
## setup state mapping data
state_map <- map_data("state") %>%
mutate(region = toTitleCase(region))
#join natality with county.pop
natality.3 <- data.table(natality.2)
setkey(natality.3,fips)
# join the natality data with the county data.
county.data <- county.data[natality.3]  # should be joined on fips
setkey(county.data, id)
# merge the mapping information with natality/county data
map.df<- map.df[county.data]  # should be joined on ID
# ggplot(map.df, aes(x=long, y=lat, group = group)) +
#   geom_polygon( aes( fill = cesarean_rate)) +
#   coord_quickmap()+
#   theme_void()+
#   geom_path(data = state_map, colour="black") +
#   scale_fill_gradientn("",colours=brewer.pal(9,"YlGnBu"))
US.states <- readOGR(dsn=".",layer="cb_2016_us_050_00_5m")
# use the TIGER dataset from the census to draw the counties
# http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_5m.zip
setwd("C:/Users/smits/Documents/GitHub/delivery_method/wonder_data_extracts")
US.states <- readOGR(dsn=".",layer="cb_2016_us_050_00_5m")
US.states <- readOGR(dsn=".",layer="cb_2016_us_5m")
US.states <- readOGR(dsn=".",layer="cb_2016_us_state_5m")
View(US.states)
US_states<- fortify(US.states, region = "NAME")
p <- ggplot() +
geom_polygon(data = US_states, aes(x = long, y = lat, group = group,
fill = percent), color = "black", size = 0.25)
p
p <- ggplot() +
geom_polygon(data = US_states, aes(x = long, y = lat), color = "black", size = 0.25)
p
p <- ggplot(US_states, x=long, y=lat) +
geom_polygon()
p
US_states<- fortify(US.states, region = "NAME")
p <- ggplot() +
geom_polygon(data = US_states, aes(x = long, y = lat), color = "black"5)
p <- ggplot() +
geom_polygon(data = US_states, aes(x = long, y = lat), color = "black")
p
View(US_states)
p <- ggplot() +
geom_polygon(data = US_states, aes(x = long, y = lat, group = group), color = "black")
p
View(US.states)
head(US.states)
head(US.states.data)
head(US.states@data)
select(unique(sort(US.states@data$STUSPS)))
unique(sort(US.states@data$STUSPS))
View(US.states)
View(US_states)
View(US.states)
US.states<-filter(US.states, @data.GEODId != '02')
US.states<-US.states[[GEODId]] != '02')
US.states<-US.states[[GEODId]] != '02'
US.states<-US.states[[GEODID]] != '02'
US.states<-US.states[[GEOID]] != '02'
View(US.states)
head(us.states@data[1])
head(US.states@data[1])
head(US.states@data[2])
head(US.states@data[3])
View(US.states)
head(US.states@data[4])
head(US.states@data["GEOID"])
US.states<-US.states[US.states@data["GEOID"] != "02"
US.states<-US.states[US.states@data["GEOID"], ] != "02"
US.states<-US.states@data["GEOID"] != "02"
us_states<-US.states@data
US.states <- readOGR(dsn=".",layer="cb_2016_us_state_5m")
us_states<-US.states@data
View(us_states)
head(us_states)
us_states<-us_states[us_states$GEOID != "02", ]
us_states<- fortify(us_states)
p <- ggplot() +
geom_polygon(data = US_states, aes(x = long, y = lat, group = group), color = "black")
p
us_states<-filter(us_states, GEOID != "02")
p <- ggplot() +
geom_polygon(data = US_states, aes(x = long, y = lat, group = group), color = "black")
p
p <- ggplot() +
geom_polygon(data = us_states, aes(x = long, y = lat, group = group), color = "black")
p
head(us_states)
US.states<- US.states[!_US.States$GEOID %in% c("02", "15", "72"),]
US.states<- US.states[!US.States$GEOID %in% c("02", "15", "72"),]
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "72"),]
us_states<-US.states@data
us_states<- fortify(us_states)
p <- ggplot() +
geom_polygon(data = us_states, aes(x = long, y = lat, group = group), color = "black")
p
View(us_states)
View(US.states)
us_states<- fortify(us_states)
p <- ggplot() +
geom_polygon(data = us_states, aes(x = long, y = lat, group = group), color = "black")
p
us_states<- fortify(US.states)
p <- ggplot() +
geom_polygon(data = us_states, aes(x = long, y = lat, group = group), color = "black")
p
View(us_states)
View(US.states)
unique(US.states@data$NAME)
View(US.states)
View(us_states)
table(US.states@data$NAME, US.states@data$GEOID)
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66)
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "60", "66", "69", "72"),]
us_states<- fortify(US.states)
p <- ggplot() +
geom_polygon(data = us_states, aes(x = long, y = lat, group = group), color = "black")
p
table(US.states@data$NAME, US.states@data$GEOID)
exclude<- table(US.states@data$NAME, US.states@data$GEOID)
exclude<- table(US.states@data$NAME, US.states@data$GEOID)
exclude
tail(exclude)
tail(exclude, 30)
unique(US.states@data$NAME)
str(exclude)
exclude[exclude[1] = "United States Virgin Islands"]
exclude[exclude[1] == "United States Virgin Islands"]
exclude[exclude[1] == "United States Virgin Islands", ]
excludeexclude[1] == "United States Virgin Islands", ]
exclude[1] == "United States Virgin Islands"
View(us_states)
View(US.states)
View(US.states[1:120])
str(US.states)
typeof(US.states)
p <- ggplot() +
geom_polygon(data = us_states, aes(x = long, y = lat, group = group))
p
p <- ggplot() +
geom_polygon(data = us_states, aes(x = long, y = lat, group = group), color = "black", fill = "white")
p
View(US.states)
######## TIGER county file (new)
US.states <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
######## TIGER county file (new)
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
View(us.counties)
us.counties<- us.counties[!US.states$STATEFP %in% c("02", "15", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")
p
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red")
p
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
US.states<- US.states[!US.states$NAME == "United States Virgin Islands",]
us_states<- fortify(US.states)
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands (52)
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "52", "60", "66", "69", "72"),]
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands (52)
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "52", "60", "66", "69", "72"),]
us_states<- fortify(US.states)
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
us.counties<- us.counties[!US.states$STATEFP %in% c("02", "15", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
us.counties<- us.counties[!US.states$STATEFP %in% c("02", "15", "52", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
us.counties<- us.counties[!US.states$STATEFP %in% c("02", "15", "52", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "60", "66", "69", "72"),]
#US.states<- US.states[!US.states$NAME == "United States Virgin" c("02", "15", "60", "66", "69", "72"),]
us_states<- fortify(US.states)
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
us.counties<- us.counties[!US.states$STATEFP %in% c("02", "15", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
## TROUBLE SHOOT
# use the TIGER dataset from the census to draw the state outlines
# http://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_state_5m.zip
US.states <- readOGR(dsn=".",layer="cb_2016_us_state_5m")
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "60", "66", "69", "72"),]
#US.states<- US.states[!US.states$NAME == "United States Virgin" c("02", "15", "60", "66", "69", "72"),]
us_states<- fortify(US.states)
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
us.counties<- us.counties[!US.states$STATEFP %in% c("02", "15", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
View(us.counties)
us.counties<- us.counties[!us.counties$STATEFP %in% c("02", "15", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "52", "60", "66", "69", "72"),]
## TROUBLE SHOOT
# use the TIGER dataset from the census to draw the state outlines
# http://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_state_5m.zip
US.states <- readOGR(dsn=".",layer="cb_2016_us_state_5m")
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands
US.states<- US.states[!US.states$GEOID %in% c("02", "15", "52", "60", "66", "69", "72"),]
#US.states<- US.states[!US.states$NAME == "United States Virgin" c("02", "15", "60", "66", "69", "72"),]
us_states<- fortify(US.states)
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
us.counties<- us.counties[!us.counties$STATEFP %in% c("02", "15", "52", "60", "66", "69", "72"),]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
US.states <- readOGR(dsn=".",layer="cb_2016_us_state_5m")
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands
exclude_states<- c("02", "15", "78", "60", "66", "69", "72")
US.states<- US.states[!US.states$GEOID %in% exclude_states,]
#US.states<- US.states[!US.states$NAME == "United States Virgin" c("02", "15", "60", "66", "69", "72"),]
us_states<- fortify(US.states)
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
us.counties<- us.counties[!us.counties$STATEFP %in% exclude_states,]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p
library(ggplot2)
library(shiny)
## set your working directory
setwd("C:/Users/smits/Documents/GitHub/delivery_method/wonder_data_extracts")
# use the TIGER dataset from the census to draw the state outlines
# http://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_state_5m.zip
# download and unzip this file - it produces many files - don't worry about it.
# just leave them all there. Make sure your pointed to the directory where you saved them
US.states <- readOGR(dsn=".",layer="cb_2016_us_state_5m")
#excludes Alaska, american samoa (60), commonwealth of the northern mariana islands (69),
# guam (66). need to exclude the virgin islands
exclude_states<- c("02", "15", "78", "60", "66", "69", "72")
US.states<- US.states[!US.states$GEOID %in% exclude_states,]
us_states<- fortify(US.states)
# GET THE COUNTY DATA
#https://www2.census.gov/geo/tiger/GENZ2016/shp/cb_2016_us_county_5m.zip
# download and unzip this file - it produces many files - don't worry about it.
# just leave them all there. Make sure your pointed to the directory where you saved them
us.counties <- readOGR(dsn=".",layer="cb_2016_us_county_5m")
us.counties<- us.counties[!us.counties$STATEFP %in% exclude_states,]
us_counties<-fortify(us.counties)
p<-ggplot()+
geom_polygon(data = us_counties, aes(x=long,y=lat, group = group), color = "black", fill = "white")+
geom_polygon(data = us_states, aes(x=long, y=lat, group = group), color = "red", fill = NA)
p + theme_void() ## show the map without a graph-looking background
