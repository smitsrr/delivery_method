p<-ggplot() +
geom_polygon(data=map.df, aes(x=long, y=lat, fill=cesarean_rate,
text = paste0(county, " County",
"<br>Pop: ", format(population,big.mark = ","),
"<br>", substr(county2, 1,12),
"<br>Cesarean Rate: ", cesarean_rate, "%",
"<br>Births: ", format(births, big.mark=","))))+
coord_map()+
geom_point(data=hospitals.df, aes(x=LONGITUDE, y=LATITUDE,
alpha=.8,
size=.2))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
labs(title="2012-2015 Cesarean Section Rate by Country, percent",x="",y="")+
theme_bw()
ggplotly(p)
p<-ggplot() +
geom_polygon(data=map.df, aes(x=long, y=lat, fill=cesarean_rate,
text = paste0(county, " County",
"<br>Pop: ", format(population,big.mark = ","),
"<br>", substr(county2, 1,12),
"<br>Cesarean Rate: ", cesarean_rate, "%",
"<br>Births: ", format(births, big.mark=","))))+
coord_map()+
geom_point(data=hospitals.df, aes(x=LONGITUDE, y=LATITUDE,
alpha=.8,
size=1/20))+
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
labs(title="2012-2015 Cesarean Section Rate by Country, percent",x="",y="")+
theme_bw()
ggplotly(p)
setwd("C:/Users/smits/Documents/GitHub/delivery_method")
# county totals, all births
natality_counties<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_all_births_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate = round(Births/sum(Births),4)*100,
births = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
head(natality_counties)
#total county rates - first born children
natality_counties<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate = round(Births/sum(Births),4)*100,
births = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
# county totals, all births
natality_counties_all<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_all_births_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate = round(Births/sum(Births),4)*100,
births = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
head(natality_counties)
head(natality_counties_all)
#total county rates - first born children
natality_counties<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate_first = round(Births/sum(Births),4)*100,
births_first = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
# county totals, all births
natality_counties_all<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_all_births_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate_all = round(Births/sum(Births),4)*100,
births_all = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
natality<- left_join(natality_counties, natality_counties_all)
View(natality)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
#  left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate.x = ifelse(is.na(cesarean_rate.x), cesarean_rate.y, cesarean_rate.x),
births.x = ifelse(is.na(births.x), births.y, births.x),
population = as.numeric(POPESTIMATE2012)) %>%
select(-County.Code, -County.y, -cesarean_rate.y, -births.y, -POPESTIMATE2012)
# initialize libraries
library(shiny)
library(plyr)
library(dplyr)
library(ggplot2)
library(rgdal)    # for readOGR(...)
library(maptools)
library(data.table)
library(mapproj)
library(RColorBrewer) # for brewer.pal(...)
library(plotly)
library(stringr)  # for str_detect(...)
setwd("C:/Users/smits/Documents/GitHub/delivery_method")
#import some data
# Note, you have to delete the comments at the end of the text files.
# due to supression, the totals likely won't be able to be calculated when
# you include segments.
natality<- read.delim("wonder_data_extracts/Natality_12_15_race_age_v2.txt",
header = TRUE, colClasses = "character")
#total county rates - first born children
natality_counties<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate_first = round(Births/sum(Births),4)*100,
births_first = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
# county totals, all births
natality_counties_all<- read.delim("wonder_data_extracts/Natality_12_15_county_totals_all_births_v2.txt",
header = TRUE, colClasses = "character") %>%
filter(Births != "Suppressed") %>%
mutate(Births = as.numeric(Births)) %>%
group_by(County.Code, County) %>%
mutate(cesarean_rate_all = round(Births/sum(Births),4)*100,
births_all = sum(Births)) %>%
filter(Delivery.Method == "Cesarean") %>%
select(-Notes, -Births, -Delivery.Method, -Delivery.Method.Code)
# join the counts/rates for first births v. all births
natality<- left_join(natality_counties, natality_counties_all)
# county and FIPS codes from https://www.census.gov/geo/reference/codes/cou.html
counties<- read.delim("national_county.txt", header = FALSE, sep = ",",
colClasses = "character")
counties_2<- counties %>%
rename_("state_code" = "V1",
"fips_state" = "V2",
"fips_county" = "V3",
"county_name" = "V4",
"fips_class" = "V5") %>%
mutate(fips = paste0(fips_state, fips_county))
# population totals for counties
# https://www.census.gov/data/datasets/2016/demo/popest/counties-total.html#ds
setwd("C:/Users/smits/Documents/GitHub/delivery_method/")
county.pop <- read.csv("co-est2016-alldata.csv", colClasses = "character") %>%
mutate(fips = paste0(STATE, COUNTY)) %>%
select(fips, POPESTIMATE2012)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code"))
head(counties_3)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
# left_join(unidentified, by = c("fips_state" = "state_code")) %>%
# mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
#        cesarean_rate.x = ifelse(is.na(cesarean_rate.x), cesarean_rate.y, cesarean_rate.x),
#        births.x = ifelse(is.na(births.x), births.y, births.x),
#        population = as.numeric(POPESTIMATE2012)) %>%
select(-County.Code, -County.y, -cesarean_rate.y, -births.y, -POPESTIMATE2012)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
# left_join(unidentified, by = c("fips_state" = "state_code")) %>%
# mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
#        cesarean_rate.x = ifelse(is.na(cesarean_rate.x), cesarean_rate.y, cesarean_rate.x),
#        births.x = ifelse(is.na(births.x), births.y, births.x),
#        population = as.numeric(POPESTIMATE2012)) %>%
# select(-County.Code, -County.y, -cesarean_rate.y, -births.y, -POPESTIMATE2012)
# if you join in and expand the unidentified counties:
##take either county.x or county.y
##cesarean_rate.x or cesarean_rate.y
##births.x or births.y
## depending on whether x is populated.
# check that we have cesarean rates for all counties with >100,000 2013 pop
#unidentified_check<- filter(counties_3, population<100000)
# following stack overflow example
setwd("./counties_shapes/gz_2010_us_050_00_5m")
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
# left_join(unidentified, by = c("fips_state" = "state_code")) %>%
# mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
#        cesarean_rate.x = ifelse(is.na(cesarean_rate.x), cesarean_rate.y, cesarean_rate.x),
#        births.x = ifelse(is.na(births.x), births.y, births.x),
#        population = as.numeric(POPESTIMATE2012)) %>%
# select(-County.Code, -County.y, -cesarean_rate.y, -births.y, -POPESTIMATE2012)
# if you join in and expand the unidentified counties:
##take either county.x or county.y
##cesarean_rate.x or cesarean_rate.y
##births.x or births.y
## depending on whether x is populated.
# check that we have cesarean rates for all counties with >100,000 2013 pop
#unidentified_check<- filter(counties_3, population<100000)
# following stack overflow example
setwd("C:/Users/smits/Documents/GitHub/delivery_method/counties_shapes/gz_2010_us_050_00_5m")
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code"))
# following stack overflow example
setwd("C:/Users/smits/Documents/GitHub/delivery_method/counties_shapes/gz_2010_us_050_00_5m")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
natality.data <- data.table(counties_3)
setkey(natality.data,fips)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
county.data2 <- county.data %>%
left_join(counties_3, by=c("FIPS"="fips")) %>%
data.table()
setkey(county.data2,id)
map.df[county.data2,cesarean_rate:=cesarean_rate.x]
head(county.data2)
map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all]
map.df[county.data2,births_all:=births_all]
map.df[county.data2,population:=population]
map.df[county.data2,population:=POPESTIMATE2012]
map.df[county.data2,county:=NAME]
map.df[county.data2,county2:=County.x]
# map.df[county.data2,county2:=County.x]
map.df[county.data2,FIPS:=FIPS]
p<-ggplot(map.df, aes(x=long, y=lat, group=group, fill=cesarean_rate_all,
text = paste0(county, " County",
"<br>Pop: ", format(population,big.mark = ","),
"<br>Cesarean Rate: ", cesarean_rate_all, "%",
"<br>Births: ", births_all))) +
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
geom_polygon()+coord_map()+
labs(title="2012-2015 Cesarean Section Rate by Country, percent",x="",y="")+
theme_bw()
ggplotly(p)
length(is.na(map.df$cesarean_rate_all))
length(is.na(map.df$cesarean_rate_first))
sum(is.na(map.df$cesarean_rate_first))
sum(is.na(map.df$cesarean_rate_all))
runApp('~/GitHub/delivery_method/delivery_method_app')
head(map.df)
#join in unidentified counties
unidentified<- filter(natality_counties, str_detect(County, "Unidentified")) %>%
mutate(state_code = substr(County.Code, 1,2))
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate.x = ifelse(is.na(cesarean_rate.x), cesarean_rate.y, cesarean_rate.x),
births.x = ifelse(is.na(births.x), births.y, births.x),
population = as.numeric(POPESTIMATE2012)) %>%
select(-County.Code, -County.y, -cesarean_rate.y, -births.y, -POPESTIMATE2012)
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate.x = ifelse(is.na(cesarean_rate.x), cesarean_rate.y, cesarean_rate.x),
births.x = ifelse(is.na(births.x), births.y, births.x),
population = as.numeric(POPESTIMATE2012))
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate.x = ifelse(is.na(cesarean_rate.x), cesarean_rate.y, cesarean_rate.x),
births.x = ifelse(is.na(births.x), births.y, births.x),
population = as.numeric(POPESTIMATE2012)) %>%
select(-County.Code, -County.y, -cesarean_rate.y, -births.y, -POPESTIMATE2012)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code"))
head(counties_3)
#join in unidentified counties
unidentified<- filter(natality, str_detect(County, "Unidentified")) %>%
mutate(state_code = substr(County.Code, 1,2))
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code"))
head(counties_3)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County.x = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate_all.x = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births.x = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012)) %>%
select(-County.Code, -County.y, -cesarean_rate_all.y, -births_all.y, -POPESTIMATE2012)
# following stack overflow example
setwd("C:/Users/smits/Documents/GitHub/delivery_method/counties_shapes/gz_2010_us_050_00_5m")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
natality.data <- data.table(counties_3)
setkey(natality.data,fips)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
county.data2 <- county.data %>%
left_join(counties_3, by=c("FIPS"="fips")) %>%
data.table()
setkey(county.data2,id)
map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all]
map.df[county.data2,births_all:=births_all]
map.df[county.data2,population:=POPESTIMATE2012]
map.df[county.data2,county:=NAME]
# map.df[county.data2,county2:=County.x]
map.df[county.data2,FIPS:=FIPS]
#map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
#map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all.x]
map.df[county.data2,births_all:=births_all.x]
map.df[county.data2,population:=POPESTIMATE2012]
map.df[county.data2,population:=population]
map.df[county.data2,county:=NAME]
# map.df[county.data2,county2:=County.x]
map.df[county.data2,FIPS:=FIPS]
head(map.df)
names(county.data2)
head(county.data2)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County_all_pop = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate_all_pop = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births_all_pop = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012))
head(counties_3)
runApp('~/GitHub/delivery_method/delivery_method_app')
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code"))
head(counties_3)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County_all_pop = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate_all_pop = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births_all_pop = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012))
head(county.data2)
county.data2 <- county.data %>%
left_join(counties_3, by=c("FIPS"="fips")) %>%
data.table()
setkey(county.data2,id)
#map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
#map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all.x]
head(county.data2)
#map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
#map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all_pop:=cesarean_rate_all_pop]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all.x]
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
county.data2 <- county.data %>%
left_join(counties_3, by=c("FIPS"="fips")) %>%
data.table()
setkey(county.data2,id)
#map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
#map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all_pop:=cesarean_rate_all_pop]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all.x]
head(county.data2)
map.df[county.data2,births_all:=births_all.x]
map.df[county.data2,population:=population]
map.df[county.data2,county:=NAME]
# map.df[county.data2,county2:=County.x]
map.df[county.data2,FIPS:=FIPS]
head(map.df)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
county.data2 <- county.data %>%
left_join(counties_3, by=c("FIPS"="fips")) %>%
data.table()
setkey(county.data2,id)
#map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
#map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all_pop:=cesarean_rate_all_pop]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all.x]
map.df[county.data2,births_all_pop:=births_all_pop]
map.df[county.data2,births_all:=births_all.x]
map.df[county.data2,population:=population]
map.df[county.data2,county:=NAME]
# map.df[county.data2,county2:=County.x]
map.df[county.data2,FIPS:=FIPS]
head(map.df)
head(county.data2)
map.df[county.data2,county_all_pop:=County_all_pop]
head(map.df)
View(counties_3)
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County_all_pop = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate_all_pop = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births_all_pop = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012)) %>%
group_by(County_all_pop) %>%
mutate(population = sum(population))
View(counties_3)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
county.data2 <- county.data %>%
left_join(counties_3, by=c("FIPS"="fips")) %>%
data.table()
setkey(county.data2,id)
#map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
#map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all_pop:=cesarean_rate_all_pop]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all.x]
map.df[county.data2,births_all_pop:=births_all_pop]
map.df[county.data2,births_all:=births_all.x]
map.df[county.data2,population:=population]
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code")) %>%
mutate(County_all_pop = ifelse(is.na(County.x), County.y, County.x),
cesarean_rate_all_pop = ifelse(is.na(cesarean_rate_all.x), cesarean_rate_all.y, cesarean_rate_all.x),
births_all_pop = ifelse(is.na(births_all.x), births_all.y, births_all.x),
population = as.numeric(POPESTIMATE2012)) %>%
group_by(County_all_pop) %>%
mutate(population_all_pop = sum(population))
# following stack overflow example
setwd("C:/Users/smits/Documents/GitHub/delivery_method/counties_shapes/gz_2010_us_050_00_5m")
US.counties <- readOGR(dsn=".",layer="gz_2010_us_050_00_5m")
#leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US.counties <- US.counties[!(US.counties$STATE %in% c("02","15","72")),]
county.data <- US.counties@data
county.data <- cbind(id=rownames(county.data),county.data)
county.data <- data.table(county.data)
county.data[,FIPS:=paste0(STATE,COUNTY)] # this is the state + county FIPS code
setkey(county.data,FIPS)
natality.data <- data.table(counties_3)
setkey(natality.data,fips)
map.df <- data.table(fortify(US.counties))
setkey(map.df,id)
county.data2 <- county.data %>%
left_join(counties_3, by=c("FIPS"="fips")) %>%
data.table()
setkey(county.data2,id)
#map.df[county.data2,cesarean_rate_first:=cesarean_rate_first]
#map.df[county.data2,births_first:=births_first]
map.df[county.data2,cesarean_rate_all_pop:=cesarean_rate_all_pop]
map.df[county.data2,cesarean_rate_all:=cesarean_rate_all.x]
map.df[county.data2,births_all_pop:=births_all_pop]
map.df[county.data2,births_all:=births_all.x]
map.df[county.data2,population:=population]
map.df[county.data2,population_unidentified:=population_all_pop]
map.df[county.data2,county:=NAME]
map.df[county.data2,county_all_pop:=County_all_pop]
map.df[county.data2,FIPS:=FIPS]
head(map.df)
runApp('~/GitHub/delivery_method/delivery_method_app')
counties_3<- left_join(counties_2, county.pop) %>%
left_join(natality, by=c("fips" = "County.Code")) %>%
left_join(unidentified, by = c("fips_state" = "state_code"))
head(counties_3)
head(county.data2)
head(map.df)
p<-ggplot(map.df, aes(x=long, y=lat, group=group, fill=cesarean_rate_all,
text = paste0(county.y,
"<br>Pop: ", format(population,big.mark = ","),
"<br>Cesarean Rate: ", cesarean_rate_all, "%",
"<br>Births: ", births_all))) +
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
geom_polygon()+coord_map()+
labs(title="2012-2015 Cesarean Section Rate by Country, percent",x="",y="")+
theme_bw()
ggplotly(p)
p<-ggplot(map.df, aes(x=long, y=lat, group=group, fill=cesarean_rate_all,
text = paste0(County, " County",
"<br>Pop: ", format(population,big.mark = ","),
"<br>Cesarean Rate: ", cesarean_rate_all, "%",
"<br>Births: ", births_all))) +
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
geom_polygon()+coord_map()+
labs(title="2012-2015 Cesarean Section Rate by Country, percent",x="",y="")+
theme_bw()
ggplotly(p)
p<-ggplot(map.df, aes(x=long, y=lat, group=group, fill=cesarean_rate_all,
text = paste0(county, " County",
"<br>Pop: ", format(population,big.mark = ","),
"<br>Cesarean Rate: ", cesarean_rate_all, "%",
"<br>Births: ", births_all))) +
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
geom_polygon()+coord_map()+
labs(title="2012-2015 Cesarean Section Rate by Country, percent",x="",y="")+
theme_bw()
ggplotly(p)
p<-ggplot(map.df, aes(x=long, y=lat, group=group, fill=cesarean_rate_all_pop,
text = paste0(county_all_pop,
"<br>Pop: ", format(population_unidentified, big.mark = ","),
"<br>Cesarean Rate: ", cesarean_rate_all_pop, "%",
"<br>Births: ", births_all_pop))) +
scale_fill_gradientn("",colours=brewer.pal(9,"YlOrRd"))+
geom_polygon()+coord_map()+
labs(title="2012-2015 Cesarean Section Rate by Country, percent",x="",y="")+
theme_bw()
p
runApp('~/GitHub/delivery_method/delivery_method_app')
setwd("C:/Users/smits/Documents/GitHub/delivery_method")
#import some data
# Note, you have to delete the comments at the end of the text files.
# due to supression, the totals likely won't be able to be calculated when
# you include segments.
natality<- read.delim("wonder_data_extracts/Natality_12_15_race_age_v2.txt",
header = TRUE, colClasses = "character")
View(natality)
